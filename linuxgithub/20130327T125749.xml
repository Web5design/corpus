<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xml:lang="en-US">
  <id>tag:github.com,2008:/torvalds/linux/commits/master</id>
  <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commits/master"/>
  <link type="application/atom+xml" rel="self" href="https://github.com/torvalds/linux/commits/master.atom"/>
  <title>Recent Commits to linux:master</title>
  <updated>2013-03-26T17:42:55-07:00</updated>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/de55eb1d60d2ed0f1ba5e13226d91b3bfbe1c108</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/de55eb1d60d2ed0f1ba5e13226d91b3bfbe1c108"/>
    <title>
        Merge branch &#39;for-linus&#39; of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs
    </title>
    <updated>2013-03-26T17:42:55-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/fb47627bc8c0bcdb36321edfbf02e916?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name>torvalds</name>
      <uri>https://github.com/torvalds</uri>
    </author>
    <content type="html">
      &lt;pre>m drivers/tty/vt/vc_screen.c
m fs/dcache.c
m fs/internal.h
m fs/read_write.c
m fs/splice.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>Merge branch &#39;for-linus&#39; of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs

Pull vfs fixes from Al Viro:
 &quot;stable fodder; assorted deadlock fixes&quot;

* &#39;for-linus&#39; of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:
  vt: synchronize_rcu() under spinlock is not nice...
  Nest rename_lock inside vfsmount_lock
  Don&#39;t bother with redoing rw_verify_area() from default_file_splice_from()&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/e8cd81693bbbb15db57d3c9aa7dd90eda4842874</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/e8cd81693bbbb15db57d3c9aa7dd90eda4842874"/>
    <title>
        vt: synchronize_rcu() under spinlock is not nice...
    </title>
    <updated>2013-03-26T17:30:17-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/b1fecf6b03fc62f894bef52b49551915?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name></name>
      <email>viro@zeniv.linux.org.uk</email>
    </author>
    <content type="html">
      &lt;pre>m drivers/tty/vt/vc_screen.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>vt: synchronize_rcu() under spinlock is not nice...

vcs_poll_data_free() calls unregister_vt_notifier(), which calls
atomic_notifier_chain_unregister(), which calls synchronize_rcu().
Do it *after* we&#39;d dropped -&gt;f_lock.

Cc: stable@vger.kernel.org (all kernels since 2.6.37)
Signed-off-by: Al Viro &lt;viro@zeniv.linux.org.uk&gt;&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/7ea600b5314529f9d1b9d6d3c41cb26fce6a7a4a</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/7ea600b5314529f9d1b9d6d3c41cb26fce6a7a4a"/>
    <title>
        Nest rename_lock inside vfsmount_lock
    </title>
    <updated>2013-03-26T15:25:57-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/b1fecf6b03fc62f894bef52b49551915?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name></name>
      <email>viro@zeniv.linux.org.uk</email>
    </author>
    <content type="html">
      &lt;pre>m fs/dcache.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>Nest rename_lock inside vfsmount_lock

... lest we get livelocks between path_is_under() and d_path() and friends.

The thing is, wrt fairness lglocks are more similar to rwsems than to rwlocks;
it is possible to have thread B spin on attempt to take lock shared while thread
A is already holding it shared, if B is on lower-numbered CPU than A and there&#39;s
a thread C spinning on attempt to take the same lock exclusive.

As the result, we need consistent ordering between vfsmount_lock (lglock) and
rename_lock (seq_lock), even though everything that takes both is going to take
vfsmount_lock only shared.

Spotted-by: Brad Spengler &lt;spender@grsecurity.net&gt;
Cc: stable@vger.kernel.org
Signed-off-by: Al Viro &lt;viro@zeniv.linux.org.uk&gt;&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/b175293ccc98ab84e93d25472d7422b4a897614b</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/b175293ccc98ab84e93d25472d7422b4a897614b"/>
    <title>
        Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net
    </title>
    <updated>2013-03-26T14:24:29-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/fb47627bc8c0bcdb36321edfbf02e916?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name>torvalds</name>
      <uri>https://github.com/torvalds</uri>
    </author>
    <content type="html">
      &lt;pre>m Documentation/networking/ipvs-sysctl.txt
m drivers/bluetooth/ath3k.c
m drivers/bluetooth/btusb.c
m drivers/net/bonding/bond_sysfs.c
m drivers/net/ethernet/broadcom/bnx2x/bnx2x_dcb.c
m drivers/net/ethernet/freescale/fec.c
m drivers/net/ethernet/freescale/fec_ptp.c
m drivers/net/ethernet/intel/igb/e1000_82575.c
m drivers/net/ethernet/intel/igb/igb_hwmon.c
m drivers/net/ethernet/intel/igb/igb_main.c
m drivers/net/ethernet/intel/igb/igb_ptp.c
m drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
m drivers/net/ethernet/lantiq_etop.c
m drivers/net/ethernet/mellanox/mlx4/en_netdev.c
m drivers/net/ethernet/mellanox/mlx4/eq.c
m drivers/net/ethernet/mellanox/mlx4/resource_tracker.c
m drivers/net/ethernet/nxp/lpc_eth.c
m drivers/net/ethernet/oki-semi/pch_gbe/pch_gbe_main.c
m drivers/net/ethernet/renesas/sh_eth.c
m drivers/net/ethernet/renesas/sh_eth.h
m drivers/net/ethernet/ti/cpsw.c
m drivers/net/wireless/ath/ath9k/ar9003_calib.c
m drivers/net/wireless/ath/ath9k/link.c
m drivers/net/wireless/iwlegacy/3945-mac.c
m drivers/net/wireless/mwifiex/cmdevt.c
m drivers/net/wireless/mwifiex/init.c
m drivers/net/wireless/mwifiex/main.h
m drivers/net/wireless/mwifiex/scan.c
m drivers/net/wireless/mwifiex/sta_ioctl.c
m drivers/net/wireless/rtlwifi/usb.c
m include/linux/thermal.h
m include/linux/udp.h
m include/net/flow_keys.h
m include/net/ip_vs.h
m include/net/ipip.h
m include/uapi/linux/packet_diag.h
m include/uapi/linux/unix_diag.h
m net/8021q/vlan.c
m net/bluetooth/sco.c
m net/bridge/br_fdb.c
m net/core/dev.c
m net/core/flow_dissector.c
m net/ipv4/af_inet.c
m net/ipv4/ipconfig.c
m net/ipv4/netfilter/Kconfig
m net/ipv4/tcp_input.c
m net/ipv4/tcp_output.c
m net/ipv4/udp.c
m net/ipv6/addrconf.c
m net/ipv6/netfilter/ip6t_NPT.c
m net/ipv6/udp.c
m net/irda/af_irda.c
m net/l2tp/l2tp_core.c
m net/l2tp/l2tp_core.h
m net/l2tp/l2tp_debugfs.c
m net/l2tp/l2tp_ip.c
m net/l2tp/l2tp_ip6.c
m net/l2tp/l2tp_netlink.c
m net/l2tp/l2tp_ppp.c
m net/netfilter/ipvs/ip_vs_core.c
m net/netfilter/ipvs/ip_vs_ctl.c
m net/netfilter/ipvs/ip_vs_proto_sctp.c
m net/netfilter/nf_conntrack_proto_dccp.c
m net/netfilter/nf_conntrack_proto_gre.c
m net/netfilter/nf_conntrack_proto_sctp.c
m net/netfilter/nf_conntrack_proto_udplite.c
m net/netfilter/nfnetlink_queue_core.c
m net/netlink/genetlink.c
m net/unix/af_unix.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net

Pull networking fixes from David Miller:

 1) Always increment IPV4 ID field in encapsulated GSO packets, even
    when DF is set.  Regression fix from Pravin B Shelar.

 2) Fix per-net subsystem initialization in netfilter conntrack,
    otherwise we may access dynamically allocated memory before it is
    actually allocated.  From Gao Feng.

 3) Fix DMA buffer lengths in iwl3945 driver, from Stanislaw Gruszka.

 4) Fix race between submission of sync vs async commands in mwifiex
    driver, from Amitkumar Karwar.

 5) Add missing cancel of command timer in mwifiex driver, from Bing
    Zhao.

 6) Missing SKB free in rtlwifi USB driver, from Jussi Kivilinna.

 7) Thermal layer tries to use a genetlink multicast string that is
    longer than the 16 character limit.  Fix it and add a BUG check to
    prevent this kind of thing from happening in the future.

 From Masatake YAMATO.

 8) Fix many bugs in the handling of the teardown of L2TP connections,
    UDP encapsulation instances, and sockets.  From Tom Parkin.

 9) Missing socket release in IRDA, from Kees Cook.

10) Fix fec driver modular build, from Fabio Estevam.

11) Erroneous use of kfree() instead of free_netdev() in lantiq_etop,
    from Wei Yongjun.

12) Fix bugs in handling of queue numbers and steering rules in mlx4
    driver, from Moshe Lazer, Hadar Hen Zion, and Or Gerlitz.

13) Some FOO_DIAG_MAX constants were defined off by one, fix from Andrey
    Vagin.

14) TCP segmentation deferral is unintentionally done too strongly,
    breaking ACK clocking.  Fix from Eric Dumazet.

15) net_enable_timestamp() can legitimately be invoked from software
    interrupts, and in a way that is safe, so remove the WARN_ON().
    Also from Eric Dumazet.

16) Fix use after free in VLANs, from Cong Wang.

17) Fix TCP slow start retransmit storms after SACK reneging, from
    Yuchung Cheng.

18) Unix socket release should mark a socket dead before NULL&#39;ing out
    sock-&gt;sk, otherwise we can race.  Fix from Paul Moore.

19) IPV6 addrconf code can try to free static memory, from Hong Zhiguo.

20) Fix register mis-programming, NULL pointer derefs, and wrong PHC
    clock frequency in IGB driver.  From Lior LevyAlex Williamson, Jiri
    Benc, and Jeff Kirsher.

21) skb-&gt;ip_summed logic in pch_gbe driver is reversed, breaking packet
    forwarding.  Fix from Veaceslav Falico.

* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (65 commits)
  ipv4: Fix ip-header identification for gso packets.
  bonding: remove already created master sysfs link on failure
  af_unix: dont send SCM_CREDENTIAL when dest socket is NULL
  pch_gbe: fix ip_summed checksum reporting on rx
  igb: fix PHC stopping on max freq
  igb: make sensor info static
  igb: SR-IOV init reordering
  igb: Fix null pointer dereference
  igb: fix i350 anti spoofing config
  ixgbevf: don&#39;t release the soft entries
  ipv6: fix bad free of addrconf_init_net
  unix: fix a race condition in unix_release()
  tcp: undo spurious timeout after SACK reneging
  bnx2x: fix assignment of signed expression to unsigned variable
  bridge: fix crash when set mac address of br interface
  8021q: fix a potential use-after-free
  net: remove a WARN_ON() in net_enable_timestamp()
  tcp: preserve ACK clocking in TSO
  net: fix *_DIAG_MAX constants
  net/mlx4_core: Disallow releasing VF QPs which have steering rules
  ...&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/5d538483ea4920899233d51f3e9c48c75cc10b6d</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/5d538483ea4920899233d51f3e9c48c75cc10b6d"/>
    <title>
        Merge tag &#39;nfs-for-3.9-3&#39; of git://git.linux-nfs.org/projects/trondmy/linux-nfs
    </title>
    <updated>2013-03-26T14:23:45-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/fb47627bc8c0bcdb36321edfbf02e916?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name>torvalds</name>
      <uri>https://github.com/torvalds</uri>
    </author>
    <content type="html">
      &lt;pre>m fs/nfs/blocklayout/blocklayoutdm.c
m fs/nfs/idmap.c
m fs/nfs/nfs4filelayout.c
m fs/nfs/nfs4proc.c
m fs/nfs/pnfs.c
m fs/nfs/pnfs.h
m net/sunrpc/sched.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>Merge tag &#39;nfs-for-3.9-3&#39; of git://git.linux-nfs.org/projects/trondmy/linux-nfs

Pull NFS client bugfixes from Trond Myklebust:
 - Fix an NFSv4 idmapper regression
 - Fix an Oops in the pNFS blocks client
 - Fix up various issues with pNFS layoutcommit
 - Ensure correct read ordering of variables in
   rpc_wake_up_task_queue_locked

* tag &#39;nfs-for-3.9-3&#39; of git://git.linux-nfs.org/projects/trondmy/linux-nfs:
  SUNRPC: Add barriers to ensure read ordering in rpc_wake_up_task_queue_locked
  NFSv4.1: Add a helper pnfs_commit_and_return_layout
  NFSv4.1: Always clear the NFS_INO_LAYOUTCOMMIT in layoutreturn
  NFSv4.1: Fix a race in pNFS layoutcommit
  pnfs-block: removing DM device maybe cause oops when call dev_remove
  NFSv4: Fix the string length returned by the idmapper&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/330305cc4a6b0cb75c22fc01b8826f0ad755550f</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/330305cc4a6b0cb75c22fc01b8826f0ad755550f"/>
    <title>
        ipv4: Fix ip-header identification for gso packets.
    </title>
    <updated>2013-03-26T10:50:05-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/79acfdccb66676ca54ef48d5de05bbb2?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name></name>
      <email>pshelar@nicira.com</email>
    </author>
    <content type="html">
      &lt;pre>m include/net/ipip.h
m net/ipv4/af_inet.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>ipv4: Fix ip-header identification for gso packets.

ip-header id needs to be incremented even if IP_DF flag is set.
This behaviour was changed in commit 490ab08127cebc25e3a26
(IP_GRE: Fix IP-Identification).

Following patch fixes it so that identification is always
incremented.

Reported-by: Cong Wang &lt;amwang@redhat.com&gt;
Signed-off-by: Pravin B Shelar &lt;pshelar@nicira.com&gt;
Signed-off-by: David S. Miller &lt;davem@davemloft.net&gt;&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/9fe16b78ee17579cb4f333534cf7043e94c67024</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/9fe16b78ee17579cb4f333534cf7043e94c67024"/>
    <title>
        bonding: remove already created master sysfs link on failure
    </title>
    <updated>2013-03-26T10:00:02-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/2453bc0f2e603230ff87352367c2c8e4?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name></name>
      <email>vfalico@redhat.com</email>
    </author>
    <content type="html">
      &lt;pre>m drivers/net/bonding/bond_sysfs.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>bonding: remove already created master sysfs link on failure

If slave sysfs symlink failes to be created - we end up without removing
the master sysfs symlink. Remove it in case of failure.

Signed-off-by: Veaceslav Falico &lt;vfalico@redhat.com&gt;
Signed-off-by: David S. Miller &lt;davem@davemloft.net&gt;&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/14134f6584212d585b310ce95428014b653dfaf6</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/14134f6584212d585b310ce95428014b653dfaf6"/>
    <title>
        af_unix: dont send SCM_CREDENTIAL when dest socket is NULL
    </title>
    <updated>2013-03-26T09:33:55-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/ce22ec5e25dd7b10acc835353e1c4988?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name></name>
      <email>dingtianhong@huawei.com</email>
    </author>
    <content type="html">
      &lt;pre>m net/unix/af_unix.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>af_unix: dont send SCM_CREDENTIAL when dest socket is NULL

SCM_SCREDENTIALS should apply to write() syscalls only either source or destination
socket asserted SOCK_PASSCRED. The original implememtation in maybe_add_creds is wrong,
and breaks several LSB testcases ( i.e. /tset/LSB.os/netowkr/recvfrom/T.recvfrom).

Origionally-authored-by: Karel Srot &lt;ksrot@redhat.com&gt;
Signed-off-by: Ding Tianhong &lt;dingtianhong@huawei.com&gt;
Acked-by: Eric Dumazet &lt;edumazet@google.com&gt;
Signed-off-by: David S. Miller &lt;davem@davemloft.net&gt;&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/465c0a165938992455357982d7f15ac105528b4a</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/465c0a165938992455357982d7f15ac105528b4a"/>
    <title>
        Merge branch &#39;master&#39; of git://git.kernel.org/pub/scm/linux/kernel/git/jkirsher/net
    </title>
    <updated>2013-03-26T09:21:31-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/81279c43ce60f56aea992763d1ed612b?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name>davem330</name>
      <uri>https://github.com/davem330</uri>
    </author>
    <content type="html">
      &lt;pre>m drivers/net/ethernet/intel/igb/e1000_82575.c
m drivers/net/ethernet/intel/igb/igb_hwmon.c
m drivers/net/ethernet/intel/igb/igb_main.c
m drivers/net/ethernet/intel/igb/igb_ptp.c
m drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>Merge branch &#39;master&#39; of git://git.kernel.org/pub/scm/linux/kernel/git/jkirsher/net

Jeff Kirsher says:

====================
This series contains updates to ixgbevf and igb.

The ixgbevf calls to pci_disable_msix() and to free the msix_entries
memory should not occur if device open fails.  Instead they should be
called during device driver removal to balance with the call to
pci_enable_msix() and the call to allocate msix_entries memory
during the device probe and driver load.

The remaining 4 of 5 igb patches are simple 1-3 line patches to fix
several issues such as possible null pointer dereference, PHC stopping
on max frequency, make sensor info static and SR-IOV initialization
reordering.

The remaining igb patch to fix anti-spoofing config fixes a problem
in i350 where anti spoofing configuration was written into a wrong
register.
====================

Signed-off-by: David S. Miller &lt;davem@davemloft.net&gt;&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/76a0e68129d7d24eb995a6871ab47081bbfa0acc</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/76a0e68129d7d24eb995a6871ab47081bbfa0acc"/>
    <title>
        pch_gbe: fix ip_summed checksum reporting on rx
    </title>
    <updated>2013-03-26T09:20:29-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/2453bc0f2e603230ff87352367c2c8e4?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name></name>
      <email>vfalico@redhat.com</email>
    </author>
    <content type="html">
      &lt;pre>m drivers/net/ethernet/oki-semi/pch_gbe/pch_gbe_main.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>pch_gbe: fix ip_summed checksum reporting on rx

skb-&gt;ip_summed should be CHECKSUM_UNNECESSARY when the driver reports that
checksums were correct and CHECKSUM_NONE in any other case. They&#39;re
currently placed vice versa, which breaks the forwarding scenario. Fix it
by placing them as described above.

Signed-off-by: Veaceslav Falico &lt;vfalico@redhat.com&gt;
Signed-off-by: David S. Miller &lt;davem@davemloft.net&gt;&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/75517d92119a3cd364f618ee962055b3ded8c396</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/75517d92119a3cd364f618ee962055b3ded8c396"/>
    <title>
        igb: fix PHC stopping on max freq
    </title>
    <updated>2013-03-26T03:21:34-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/72d928130dfe3f3b7701753705c47bc6?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name></name>
      <email>jbenc@redhat.com</email>
    </author>
    <content type="html">
      &lt;pre>m drivers/net/ethernet/intel/igb/igb_ptp.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>igb: fix PHC stopping on max freq

For 82576 MAC type, max_adj is reported as 1000000000 ppb. However, if
this value is passed to igb_ptp_adjfreq_82576, incvalue overflows out of
INCVALUE_82576_MASK, resulting in setting of zero TIMINCA.incvalue, stopping
the PHC (instead of going at twice the nominal speed).

Fix the advertised max_adj value to the largest value hardware can handle.
As there is no min_adj value available (-max_adj is used instead), this will
also prevent stopping the clock intentionally. It&#39;s probably not a big deal,
other igb MAC types don&#39;t support stopping the clock, either.

Signed-off-by: Jiri Benc &lt;jbenc@redhat.com&gt;
Acked-by: Matthew Vick &lt;matthew.vick@intel.com&gt;
Tested-by: Aaron Brown &lt;aaron.f.brown@intel.com&gt;
Signed-off-by: Jeff Kirsher &lt;jeffrey.t.kirsher@intel.com&gt;&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/05ec29e8fa9b6ec8d4ad5d2f6d5fc5467c7970bc</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/05ec29e8fa9b6ec8d4ad5d2f6d5fc5467c7970bc"/>
    <title>
        igb: make sensor info static
    </title>
    <updated>2013-03-26T03:14:48-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/07ae23ee1e73c3f8336247261a0ab79e?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name></name>
      <email>stephen@networkplumber.org</email>
    </author>
    <content type="html">
      &lt;pre>m drivers/net/ethernet/intel/igb/igb_hwmon.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>igb: make sensor info static

Trivial sparse warning.

Signed-off-by: Stephen Hemminger &lt;stephen@networkplumber.org&gt;
Tested-by: Aaron Brown &lt;aaron.f.brown@intel.com&gt;
Signed-off-by: Jeff Kirsher &lt;jeffrey.t.kirsher@intel.com&gt;&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/d5e51a10d21761faaf069cac6f1c0311cf332820</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/d5e51a10d21761faaf069cac6f1c0311cf332820"/>
    <title>
        igb: SR-IOV init reordering
    </title>
    <updated>2013-03-26T03:07:27-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/c33ff614314691159e0e4ecb4173ab84?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name>awilliam</name>
      <uri>https://github.com/awilliam</uri>
    </author>
    <content type="html">
      &lt;pre>m drivers/net/ethernet/intel/igb/igb_main.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>igb: SR-IOV init reordering

igb is ineffective at setting a lower total VFs because:

int pci_sriov_set_totalvfs(struct pci_dev *dev, u16 numvfs)
{
        ...
        /* Shouldn&#39;t change if VFs already enabled */
        if (dev-&gt;sriov-&gt;ctrl &amp; PCI_SRIOV_CTRL_VFE)
                return -EBUSY;

Swap init ordering.

Signed-off-by: Alex Williamson &lt;alex.williamson@redhat.com&gt;
Acked-by: Greg Rose &lt;gregory.v.rose@intel.com&gt;
Tested-by: Aaron Brown &lt;aaron.f.brown@intel.com&gt;
Signed-off-by: Jeff Kirsher &lt;jeffrey.t.kirsher@intel.com&gt;&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/d0f63acc2ff354a525f7bc7ba90e81f49b6c2ef8</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/d0f63acc2ff354a525f7bc7ba90e81f49b6c2ef8"/>
    <title>
        igb: Fix null pointer dereference
    </title>
    <updated>2013-03-26T03:00:32-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/c33ff614314691159e0e4ecb4173ab84?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name>awilliam</name>
      <uri>https://github.com/awilliam</uri>
    </author>
    <content type="html">
      &lt;pre>m drivers/net/ethernet/intel/igb/igb_main.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>igb: Fix null pointer dereference

The max_vfs= option has always been self limiting to the number of VFs
supported by the device.  fa44f2f1 added SR-IOV configuration via
sysfs, but in the process broke this self correction factor.  The
failing path is:

igb_probe
  igb_sw_init
    if (max_vfs &gt; 7) {
        adapter-&gt;vfs_allocated_count = 7;
    ...
    igb_probe_vfs
    igb_enable_sriov(, max_vfs)
      if (num_vfs &gt; 7) {
        err = -EPERM;
        ...

This leaves vfs_allocated_count = 7 and vf_data = NULL, so we bomb out
when igb_probe finally calls igb_reset.  It seems like a really bad
idea, and somewhat pointless, to set vfs_allocated_count separate from
vf_data, but limiting max_vfs is enough to avoid the null pointer.

Signed-off-by: Alex Williamson &lt;alex.williamson@redhat.com&gt;
Acked-by: Greg Rose &lt;gregory.v.rose@intel.com&gt;
Tested-by: Aaron Brown &lt;aaron.f.brown@intel.com&gt;
Signed-off-by: Jeff Kirsher &lt;jeffrey.t.kirsher@intel.com&gt;&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/22c12752d183f39aa8e2cc884cfcb23c0cb6d98d</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/22c12752d183f39aa8e2cc884cfcb23c0cb6d98d"/>
    <title>
        igb: fix i350 anti spoofing config
    </title>
    <updated>2013-03-26T02:47:50-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/32cd85f4aecd052fc9fed49c2f43c51d?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name></name>
      <email>lior.levy@intel.com</email>
    </author>
    <content type="html">
      &lt;pre>m drivers/net/ethernet/intel/igb/e1000_82575.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>igb: fix i350 anti spoofing config

Fix a problem in i350 where anti spoofing configuration was written into a
wrong register.

Signed-off-by: Lior Levy &lt;lior.levy@intel.com&gt;
Tested-by: Aaron Brown &lt;aaron.f.brown@intel.com&gt;
Signed-off-by: Jeff Kirsher &lt;jeffrey.t.kirsher@intel.com&gt;&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/a1f6c6b147cc5e83ec36dab8370bd5ec5fa1def6</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/a1f6c6b147cc5e83ec36dab8370bd5ec5fa1def6"/>
    <title>
        ixgbevf: don&#39;t release the soft entries
    </title>
    <updated>2013-03-26T02:31:48-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/b1d4a875299af1265b061080b68a11e3?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name></name>
      <email>xunleer.li@huawei.com</email>
    </author>
    <content type="html">
      &lt;pre>m drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>ixgbevf: don&#39;t release the soft entries

When the ixgbevf driver is opened the request to allocate MSIX irq
vectors may fail.  In that case the driver will call ixgbevf_down()
which will call ixgbevf_irq_disable() to clear the HW interrupt
registers and calls synchronize_irq() using the msix_entries pointer in
the adapter structure.  However, when the function to request the MSIX
irq vectors failed it had already freed the msix_entries which causes
an OOPs from using the NULL pointer in synchronize_irq().

The calls to pci_disable_msix() and to free the msix_entries memory
should not occur if device open fails.  Instead they should be called
during device driver removal to balance with the call to
pci_enable_msix() and the call to allocate msix_entries memory
during the device probe and driver load.

Signed-off-by: Li Xun &lt;xunleer.li@huawei.com&gt;
Signed-off-by: Greg Rose &lt;gregory.v.rose@intel.com&gt;
Tested-by: Sibai Li &lt;sibai.li@intel.com&gt;
Signed-off-by: Jeff Kirsher &lt;jeffrey.t.kirsher@intel.com&gt;&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/a12183c62717ac4579319189a00f5883a18dff08</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/a12183c62717ac4579319189a00f5883a18dff08"/>
    <title>
        Merge branch &#39;timers-urgent-for-linus&#39; of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    </title>
    <updated>2013-03-25T18:03:34-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/fb47627bc8c0bcdb36321edfbf02e916?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name>torvalds</name>
      <uri>https://github.com/torvalds</uri>
    </author>
    <content type="html">
      &lt;pre>m kernel/time/tick-broadcast.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>Merge branch &#39;timers-urgent-for-linus&#39; of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip

Pull timer fix from Thomas Gleixner:
 &quot;A single bugfix which prevents that a non functional timer device is
  selected to provide the fallback device, which is supposed to serve
  timer interrupts on behalf of non functional devices ...&quot;

* &#39;timers-urgent-for-linus&#39; of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
  clockevents: Don&#39;t allow dummy broadcast timers&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/a79ca223e029aa4f09abb337accf1812c900a800</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/a79ca223e029aa4f09abb337accf1812c900a800"/>
    <title>
        ipv6: fix bad free of addrconf_init_net
    </title>
    <updated>2013-03-25T10:55:38-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/7c0ec16dc6619038972dbccadac0884f?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name>honkiko</name>
      <uri>https://github.com/honkiko</uri>
    </author>
    <content type="html">
      &lt;pre>m net/ipv6/addrconf.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>ipv6: fix bad free of addrconf_init_net

Signed-off-by: Hong Zhiguo &lt;honkiko@gmail.com&gt;
Signed-off-by: David S. Miller &lt;davem@davemloft.net&gt;&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/ded34e0fe8fe8c2d595bfa30626654e4b87621e0</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/ded34e0fe8fe8c2d595bfa30626654e4b87621e0"/>
    <title>
        unix: fix a race condition in unix_release()
    </title>
    <updated>2013-03-25T10:11:48-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/feab730236a78b677b5520fdd296f9bb?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name></name>
      <email>pmoore@redhat.com</email>
    </author>
    <content type="html">
      &lt;pre>m net/unix/af_unix.c
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>unix: fix a race condition in unix_release()

As reported by Jan, and others over the past few years, there is a
race condition caused by unix_release setting the sock-&gt;sk pointer
to NULL before properly marking the socket as dead/orphaned.  This
can cause a problem with the LSM hook security_unix_may_send() if
there is another socket attempting to write to this partially
released socket in between when sock-&gt;sk is set to NULL and it is
marked as dead/orphaned.  This patch fixes this by only setting
sock-&gt;sk to NULL after the socket has been marked as dead; I also
take the opportunity to make unix_release_sock() a void function
as it only ever returned 0/success.

Dave, I think this one should go on the -stable pile.

Special thanks to Jan for coming up with a reproducer for this
problem.

Reported-by: Jan Stancek &lt;jan.stancek@gmail.com&gt;
Signed-off-by: Paul Moore &lt;pmoore@redhat.com&gt;
Signed-off-by: David S. Miller &lt;davem@davemloft.net&gt;&lt;/pre>
    </content>
  </entry>
  <entry>
    <id>tag:github.com,2008:Grit::Commit/53b680924800ad6c67f7e54ca7d5bdc4859d2318</id>
    <link type="text/html" rel="alternate" href="https://github.com/torvalds/linux/commit/53b680924800ad6c67f7e54ca7d5bdc4859d2318"/>
    <title>
        Merge tag &#39;rdma-for-linus&#39; of git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband
    </title>
    <updated>2013-03-25T09:44:40-07:00</updated>
    <media:thumbnail height="30" width="30" url="https://secure.gravatar.com/avatar/fb47627bc8c0bcdb36321edfbf02e916?s=30&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <author>
      <name>torvalds</name>
      <uri>https://github.com/torvalds</uri>
    </author>
    <content type="html">
      &lt;pre>m drivers/infiniband/hw/cxgb4/qp.c
m drivers/infiniband/hw/ipath/ipath_verbs.c
m drivers/infiniband/hw/qib/Kconfig
m drivers/infiniband/hw/qib/qib_driver.c
m drivers/infiniband/hw/qib/qib_iba6120.c
m drivers/infiniband/hw/qib/qib_init.c
m drivers/infiniband/hw/qib/qib_sd7220.c
m drivers/infiniband/hw/qib/qib_verbs.c
m drivers/infiniband/ulp/ipoib/ipoib_cm.c
m firmware/Makefile
+ firmware/intel/sd7220.fw.ihex
&lt;/pre>
      &lt;pre style='white-space:pre-wrap;width:81ex'>Merge tag &#39;rdma-for-linus&#39; of git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband

Pull infiniband/rdma fixes from Roland Dreier:
 &quot;Small batch of InfiniBand/RDMA fixes for 3.9:

   - Fix for TX lockup in IPoIB
   - QLogic -&gt; Intel update for qib driver
   - Small static checker fix for qib
   - Fix error path return value in cxgb4&quot;

* tag &#39;rdma-for-linus&#39; of git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband:
  IB/qib: change QLogic to Intel
  IB/ipath: Silence a static checker warning
  IPoIB: Fix send lockup due to missed TX completion
  RDMA/cxgb4: Fix error return code in create_qp()&lt;/pre>
    </content>
  </entry>
</feed>
